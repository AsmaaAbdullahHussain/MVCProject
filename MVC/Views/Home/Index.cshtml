@model List<Business>
@{
    ViewData["Title"] = "Home";
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
<style>
    /* Hero Section Styles */
    .hero-section {
        background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('https://images.unsplash.com/photo-1519389950473-47ba0277781c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80');
        background-size: cover;
        background-position: center;
        color: white;
        padding: 100px 0;
        margin-bottom: 50px;
        border-radius: 0 0 20px 20px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .hero-content {
        max-width: 800px;
        margin: 0 auto;
        text-align: center;
    }

    .hero-title {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 20px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }

    .hero-subtitle {
        font-size: 1.5rem;
        margin-bottom: 30px;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    }

    .search-box {
        background: white;
        border-radius: 10px;
        padding: 25px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
    }

    .search-row {
        margin-bottom: 15px;
    }

    .search-button {
        background-color: #2c6eff;
        color: white;
        font-weight: 600;
        padding: 12px 25px;
        border-radius: 30px;
        border: none;
        transition: all 0.3s ease;
        width: 100%;
    }

    .search-button:hover {
        background-color: #1b5ce0;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(27, 92, 224, 0.3);
    }

    .form-control, .select2-container--default .select2-selection--single {
        height: 50px;
        border-radius: 5px;
        border: 1px solid #ddd;
        box-shadow: none;
    }

    .select2-container--default .select2-selection--single {
        display: flex;
        align-items: center;
    }

    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 50px;
    }

    /* Sponsored Section Styles */
    .sponsored-section {
        padding: 60px 0;
    }

    .section-title {
        text-align: center;
        margin-bottom: 40px;
        color: #333;
        font-weight: 700;
    }

    .section-title span {
        color: #2c6eff;
    }

    .business-card {
        border: none;
        border-radius: 10px;
        overflow: hidden;
        transition: all 0.3s ease;
        height: 100%;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    }

    .business-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
    }

    .card-img-top {
        height: 200px;
        object-fit: cover;
    }

    .card-body {
        padding: 20px;
    }

    .business-title {
        font-weight: 600;
        margin-bottom: 10px;
        color: #333;
    }

    .business-category {
        color: #2c6eff;
        font-weight: 500;
        margin-bottom: 15px;
        display: block;
    }

    .business-description {
        color: #666;
        margin-bottom: 20px;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .business-features {
        margin-bottom: 15px;
    }

    .feature-badge {
        background-color: #f8f9fa;
        color: #666;
        font-size: 0.8rem;
        padding: 5px 10px;
        border-radius: 20px;
        margin-right: 5px;
        margin-bottom: 5px;
        display: inline-block;
    }

    .business-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .view-button {
        color: #2c6eff;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.2s ease;
    }

    .view-button:hover {
        color: #1b5ce0;
        text-decoration: underline;
    }

    .rating {
        color: #ffc107;
    }

    .sponsored-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        background-color: rgba(44, 110, 255, 0.9);
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        font-weight: 600;
        font-size: 0.75rem;
    }

    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 40px;
    }

    .pagination .page-link {
        color: #2c6eff;
        border: none;
        margin: 0 5px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    }

    .pagination .page-item.active .page-link {
        background-color: #2c6eff;
        color: white;
    }

    .search-input-icon {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        left: 10px;
        color: #aaa;
        z-index: 10;
    }

    .search-input-with-icon {
        padding-left: 35px;
    }

    .suggestions-container {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background-color: white;
        border-radius: 0 0 5px 5px;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        max-height: 200px;
        overflow-y: auto;
        display: none;
    }

    .suggestion-item {
        padding: 10px 15px;
        cursor: pointer;
        border-bottom: 1px solid #f5f5f5;
    }

    .suggestion-item:hover {
        background-color: #f9f9f9;
    }

    .location-marker {
        color: #ff5252;
        margin-right: 5px;
    }
</style>

<!-- Hero Section with Search -->
<section class="hero-section">
    <div class="container">
        <div class="hero-content">
            <h1 class="hero-title">Find the Perfect Business</h1>
            <p class="hero-subtitle">Discover top businesses in your area</p>
            
            <div class="search-box">
                <form id="searchForm" action="/Business/Search" method="get">
                    <div class="row search-row">
                        <div class="col-lg-8 mb-3 mb-lg-0">
                            <div class="position-relative">
                                <i class="fas fa-search search-input-icon"></i>
                                <input type="text" id="searchInput" name="searchTerm" class="form-control search-input-with-icon" placeholder="Search for businesses, features, or keywords" autocomplete="off">
                                <div id="searchSuggestions" class="suggestions-container"></div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <select id="categorySelect" name="categoryId" class="form-select">
                                <option value="">All Categories</option>
                                @if (ViewBag.Categories != null)
                                {
                                    foreach (var category in ViewBag.Categories)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    
                    <div class="row search-row">
                        <div class="col-lg-8 mb-3 mb-lg-0">
                            <div class="position-relative">
                                <i class="fas fa-map-marker-alt search-input-icon"></i>
                                <input type="text" id="locationInput" name="location" class="form-control search-input-with-icon" placeholder="Enter location" autocomplete="off">
                                <div id="locationSuggestions" class="suggestions-container"></div>
                                <input type="hidden" id="latitude" name="lat">
                                <input type="hidden" id="longitude" name="lng">
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <button type="submit" class="search-button">
                                <i class="fas fa-search me-2"></i> Search
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Sponsored Businesses Section -->
<section class="sponsored-section">
    <div class="container">
        <h2 class="section-title">Sponsored <span>Businesses</span></h2>
        
        <div class="row">
            @if (Model != null && Model.Any())
            {
                foreach (var business in Model)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="card business-card">
                            <span class="sponsored-badge">Premium</span>
                            <img src="@business.MainImage" class="card-img-top" alt="@business.Name">
                            <div class="card-body">
                                <h5 class="business-title">@business.Name</h5>
                                <span class="business-category">
                                    <i class="fas fa-tag me-2"></i>@(business.Category?.Name ?? "General")
                                </span>
                                <p class="business-description">@business.Description</p>
                                
                                <div class="business-features">
                                    @if (business.BusinessFeatures != null && business.BusinessFeatures.Any())
                                    {
                                        foreach (var feature in business.BusinessFeatures.Take(3))
                                        {
                                            <span class="feature-badge">@feature.Name</span>
                                        }
                                        
                                        if (business.BusinessFeatures.Count > 3)
                                        {
                                            <span class="feature-badge">+@(business.BusinessFeatures.Count - 3) more</span>
                                        }
                                    }
                                </div>
                                
                                <div class="business-footer">
                                    <div class="rating">
                                        @{
                                            // Fixed rating calculation
                                            double rating = 0;
                                            if (business.Reviews != null && business.Reviews.Any())
                                            {
                                                rating = business.Reviews.Average(r => r.Rating);
                                            }
                                            
                                            for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= Math.Round(rating))
                                                {
                                                    <i class="fas fa-star"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star"></i>
                                                }
                                            }
                                        }
                                    </div>
                                    <a href="/Business/GetBusinessById/@business.Id" class="view-button">
                                        View Details <i class="fas fa-arrow-right ms-1"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12 text-center">
                    <p>No featured businesses available at the moment.</p>
                </div>
            }
        </div>
        
        <!-- Pagination -->
        <div class="pagination-container">
            <ul class="pagination">
                @if (ViewBag.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }
                
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?page=@i">@i</a>
                    </li>
                }
                
                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize Select2 for category dropdown
            $('#categorySelect').select2({
                placeholder: "All Categories",
                allowClear: true
            });
            
            // Business name search suggestions
            $('#searchInput').on('input', function() {
                const query = $(this).val().trim();
                if (query.length >= 2) {
                    $.ajax({
                        url: '/Business/SearchSuggestions',
                        type: 'GET',
                        data: { query: query },
                        success: function(data) {
                            populateSuggestions(data, '#searchSuggestions', '#searchInput');
                        },
                        error: function(error) {
                            console.error('Error fetching search suggestions:', error);
                        }
                    });
                } else {
                    $('#searchSuggestions').hide();
                }
            });
            
            // Location search suggestions with geocoding
            let debounceTimer;
            $('#locationInput').on('input', function() {
                const query = $(this).val().trim();
                
                clearTimeout(debounceTimer);
                debounceTimer = setTimeout(function() {
                    if (query.length >= 2) {
                        $.ajax({
                            url: 'https://nominatim.openstreetmap.org/search',
                            type: 'GET',
                            data: {
                                q: query,
                                format: 'json',
                                limit: 5
                            },
                            success: function(data) {
                                const suggestions = data.map(item => ({
                                    id: item.place_id,
                                    text: item.display_name,
                                    lat: item.lat,
                                    lon: item.lon
                                }));
                                
                                populateLocationSuggestions(suggestions);
                            },
                            error: function(error) {
                                console.error('Error fetching location suggestions:', error);
                            }
                        });
                    } else {
                        $('#locationSuggestions').hide();
                    }
                }, 300);
            });
            
            // Handle clicking outside suggestion containers
            $(document).on('click', function(e) {
                if (!$(e.target).closest('#searchInput, #searchSuggestions').length) {
                    $('#searchSuggestions').hide();
                }
                
                if (!$(e.target).closest('#locationInput, #locationSuggestions').length) {
                    $('#locationSuggestions').hide();
                }
            });
            
            // Function to populate search suggestions
            function populateSuggestions(data, containerId, inputId) {
                const container = $(containerId);
                container.empty();
                
                if (data && data.length > 0) {
                    data.forEach(function(item) {
                        const suggestionItem = $('<div>')
                            .addClass('suggestion-item')
                            .text(item.text || item)
                            .on('click', function() {
                                $(inputId).val(item.text || item);
                                container.hide();
                            });
                        
                        container.append(suggestionItem);
                    });
                    
                    container.show();
                } else {
                    container.hide();
                }
            }
            
            // Function to populate location suggestions
            function populateLocationSuggestions(suggestions) {
                const container = $('#locationSuggestions');
                container.empty();
                
                if (suggestions && suggestions.length > 0) {
                    suggestions.forEach(function(item) {
                        const suggestionItem = $('<div>')
                            .addClass('suggestion-item')
                            .html(`<i class="fas fa-map-marker-alt location-marker"></i>${item.text}`)
                            .on('click', function() {
                                $('#locationInput').val(item.text);
                                $('#latitude').val(item.lat);
                                $('#longitude').val(item.lon);
                                container.hide();
                            });
                        
                        container.append(suggestionItem);
                    });
                    
                    container.show();
                } else {
                    container.hide();
                }
            }
            
            // Search form validation
            $('#searchForm').on('submit', function(e) {
                const searchTerm = $('#searchInput').val().trim();
                const location = $('#locationInput').val().trim();
                const category = $('#categorySelect').val();
                
                if (!searchTerm && !location && !category) {
                    e.preventDefault();
                    alert('Please enter at least one search criteria');
                    return false;
                }
                
                return true;
            });
            
            // Use browser geolocation if available
            if (navigator.geolocation) {
                $('#getUserLocation').on('click', function(e) {
                    e.preventDefault();
                    navigator.geolocation.getCurrentPosition(function(position) {
                        const lat = position.coords.latitude;
                        const lng = position.coords.longitude;
                        
                        // Reverse geocode to get address
                        $.ajax({
                            url: `https://nominatim.openstreetmap.org/reverse`,
                            type: 'GET',
                            data: {
                                lat: lat,
                                lon: lng,
                                format: 'json'
                            },
                            success: function(data) {
                                if (data) {
                                    $('#locationInput').val(data.display_name);
                                    $('#latitude').val(lat);
                                    $('#longitude').val(lng);
                                }
                            },
                            error: function(error) {
                                console.error('Error reverse geocoding:', error);
                            }
                        });
                    }, function(error) {
                        console.error('Error getting location:', error);
                        alert('Unable to get your location. Please enter it manually.');
                    });
                });
            }
        });
    </script>
}
